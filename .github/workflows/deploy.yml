name: Deploy to Google Cloud Run

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GAR_LOCATION: us-central1
  SERVICE: tasks-ui
  REGION: us-central1

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

      - name: Run tests (if available)
        run: npm test --if-present

      - name: Build application
        run: npm run build

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create production environment file
        run: |
          echo "VITE_API_BASE_URL=https://springboot-gcp-api-service-1005440968570.us-central1.run.app/api" > .env.production
          echo "VITE_APP_ENV=production" >> .env.production
          echo "VITE_DEBUG=false" >> .env.production

      - name: Build application
        run: npm run build -- --mode production
        env:
          NODE_ENV: production

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Enable APIs and Configure Project
        run: |-
          gcloud config set project ${{ env.PROJECT_ID }}
          gcloud services enable artifactregistry.googleapis.com
          gcloud services enable run.googleapis.com
          gcloud services enable cloudbuild.googleapis.com

      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v3'
        with:
          username: _json_key
          password: ${{ secrets.GCP_SA_KEY }}
          registry: ${{ env.GAR_LOCATION }}-docker.pkg.dev

      - name: Create Artifact Registry Repository
        run: |-
          # Create repository if it doesn't exist
          gcloud artifacts repositories describe ${{ env.SERVICE }} --location=${{ env.GAR_LOCATION }} || \
          gcloud artifacts repositories create ${{ env.SERVICE }} \
            --repository-format=docker \
            --location=${{ env.GAR_LOCATION }} \
            --description="Docker repository for ${{ env.SERVICE }} application"

      - name: Build and Push Container
        run: |-
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.SERVICE }}:${{ github.sha }}" ./
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.SERVICE }}:${{ github.sha }}"

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.SERVICE }}:${{ github.sha }}
          flags: |
            --allow-unauthenticated
            --memory=512Mi
            --cpu=1
            --min-instances=0
            --max-instances=10
            --timeout=300

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
